apiVersion: apps/v1
kind: Deployment
metadata:
  name: sonarqube-deployment
  labels:
    app: sonarqube
    env: prod
spec:
  replicas: 1
  selector:
    matchLabels:
      app: sonarqube
      env: prod
  template:
    metadata:
      labels:
        app: sonarqube
        env: prod
    spec:
      containers:
      - name: sonarqube-container
        image: sonarqube
        imagePullPolicy: IfNotPresent
        # env:
        #   - name: SONARQUBE_JDBC_USERNAME
        #     value: postgres
        #   - name: SONARQUBE_JDBC_PASSWORD
        #     value: "sonarquberry@12"
        #   - name: SONARQUBE_JDBC_URL
        #     value: jdbc:postgresql://postgres-service:5432/sonarqube
        resources:
          requests:
            memory: "1024Mi"
            cpu: "500m"
          limits:
            memory: "40096Mi"
            cpu: "1000m"
        volumeMounts:
          - name: sonarqube-conf
            mountPath: /opt/sonarqube/conf
          - name: sonarqube-data
            mountPath: /opt/sonarqube/data
          - name: sonarqube-logs
            mountPath: /opt/sonarqube/logs
          - name: sonarqube-extensions
            mountPath: /opt/sonarqube/extensions      
        ports:
        - containerPort: 9000    
      volumes:
        - name: sonarqube-conf
          nfs:
            server: 192.168.0.2
            path: "/devops/sonarqube/conf"
        - name: sonarqube-data
          nfs:
            server: 192.168.0.2
            path: "/devops/sonarqube/data"
        - name: sonarqube-logs
          nfs:
            server: 192.168.0.2
            path: "/devops/sonarqube/logs"
        - name: sonarqube-extensions
          nfs:
            server: 192.168.0.2
            path: "/devops/sonarqube/extensions"
---
kind: Service
apiVersion: v1
metadata:
  name: sonarqube-service
  labels:
    app: sonarqube
    env: prod
spec:
  selector:
    app: sonarqube
    env: prod
  ports:
  - name: sonarqube
    protocol: TCP
    port: 9000
    targetPort: 9000
    nodePort: 30009
  type: NodePort